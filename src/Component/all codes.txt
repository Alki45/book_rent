import React, { useState } from 'react';

const RegisterationOwner = () => {
  const [formData, setFormData] = useState({
    username: '',
    email: '',
    password: '',
    confirmPassword: '',
    fullName: '',
    phoneNumber: '',
    address: '',
    dateOfBirth: '',
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    // Ensure passwords match
    if (formData.password !== formData.confirmPassword) {
      alert('Passwords do not match');
      return;
    }

    try {
      const response = await fetch('http://localhost:5000/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: formData.username,
          email: formData.email,
          password: formData.password,
          full_name: formData.fullName,
          phone_number: formData.phoneNumber,
          address: formData.address,
          date_of_birth: formData.dateOfBirth,
        }),
      });

      const data = await response.json();
      if (response.ok) {
        alert('User registered successfully');
        // Optionally redirect to login or another page
        window.location.href = '/login'; // Example redirect
      } else {
        alert('Error: ' + data.error);
      }
    } catch (error) {
      console.error('Error during registration:', error);
      alert('An error occurred while registering the user');
    }
  };

  const styles = {
    container: {
      display: 'flex',
      height: '100vh',
      overflow: 'hidden',
    },
    leftPane: {
      flex: 1,
      backgroundColor: '#0B132B',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
    },
    rightPane: {
      flex: 1,
      padding: '5vw',
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      maxWidth: '600px',
      margin: 'auto',
    },
    logo: {
      width: '80%',
      maxWidth: '300px',
      height: 'auto',
    },
    form: {
      display: 'flex',
      flexDirection: 'column',
    },
    input: {
      marginBottom: '1rem',
      padding: '0.75rem',
      fontSize: '1rem',
      borderRadius: '0.5rem',
      border: '1px solid #ccc',
    },
    checkboxContainer: {
      display: 'flex',
      alignItems: 'center',
      marginBottom: '1rem',
    },
    checkbox: {
      marginRight: '0.5rem',
    },
    button: {
      padding: '0.75rem',
      fontSize: '1rem',
      borderRadius: '0.5rem',
      border: 'none',
      backgroundColor: '#007BFF',
      color: 'white',
      cursor: 'pointer',
    },
    loginLink: {
      marginTop: '0.75rem',
      color: '#007BFF',
      textDecoration: 'none',
    },
    '@media (max-width: 768px)': {
      rightPane: {
        padding: '2rem',
      },
    },
    '@media (max-width: 480px)': {
      input: {
        padding: '0.5rem',
        fontSize: '0.875rem',
      },
      button: {
        padding: '0.5rem',
        fontSize: '0.875rem',
      },
      logo: {
        width: '60%',
      },
    },
  };

  return (
    <div style={styles.container}>
      <div style={styles.leftPane}>
        <img 
          src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Book_font_awesome.svg/1024px-Book_font_awesome.svg.png" 
          alt="Book Logo" 
          style={styles.logo} 
        />
      </div>
      <div style={styles.rightPane}>
        <h2>Book Rent</h2>
        <h3>Signup as Owner</h3>
        <form style={styles.form} onSubmit={handleSubmit}>
          <input 
            type="text" 
            name="username" 
            placeholder="Username" 
            style={styles.input} 
            value={formData.username}
            onChange={handleChange}
            required
          />
          <input 
            type="email" 
            name="email" 
            placeholder="Email address" 
            style={styles.input} 
            value={formData.email}
            onChange={handleChange}
            required
          />
          <input 
            type="password" 
            name="password" 
            placeholder="Password" 
            style={styles.input} 
            value={formData.password}
            onChange={handleChange}
            required
          />
          <input 
            type="password" 
            name="confirmPassword" 
            placeholder="Confirm Password" 
            style={styles.input} 
            value={formData.confirmPassword}
            onChange={handleChange}
            required
          />
          <input 
            type="text" 
            name="fullName" 
            placeholder="Full Name" 
            style={styles.input} 
            value={formData.fullName}
            onChange={handleChange}
          />
          <input 
            type="text" 
            name="phoneNumber" 
            placeholder="Phone Number" 
            style={styles.input} 
            value={formData.phoneNumber}
            onChange={handleChange}
          />
          <input 
            type="text" 
            name="address" 
            placeholder="Address" 
            style={styles.input} 
            value={formData.address}
            onChange={handleChange}
          />
          <input 
            type="date" 
            name="dateOfBirth" 
            placeholder="Date of Birth" 
            style={styles.input} 
            value={formData.dateOfBirth}
            onChange={handleChange}
          />
          <div style={styles.checkboxContainer}>
            <input type="checkbox" style={styles.checkbox} />
            <label>I accept the Terms and Conditions</label>
          </div>
          <button type="submit" style={styles.button}>SIGN UP</button>
          <a href="/login" style={styles.loginLink}>Already have an account? Login</a>
        </form>
      </div>
    </div>
  );
};

export default RegisterationOwner;






# bookpage
import React from 'react';

const BookRent = () => {
  return (
    <div style={styles.container}>
      <div style={styles.sidebar}>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üìã</span>
          <span style={styles.label}>Dashboard</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üìö</span>
          <span style={styles.label}>Books</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üë•</span>
          <span style={styles.label}>Owners</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üîî</span>
          <span style={styles.label}>Notification</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>‚öôÔ∏è</span>
          <span style={styles.label}>Setting</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üë§</span>
          <span style={styles.label}>Login as Book Owner</span>
        </div>
        <div style={styles.logoutButton}>
          <span style={styles.icon}>‚á†</span>
          <span style={styles.label}>Logout</span>
        </div>
      </div>
      <div style={styles.content}>
        <table style={styles.table}>
          <thead>
            <tr>
              <th style={styles.th}>No.</th>
              <th style={styles.th}>Owner</th>
              <th style={styles.th}>Upload</th>
              <th style={styles.th}>Location</th>
              <th style={styles.th}>Status</th>
              <th style={styles.th}>Action</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style={styles.td}>01</td>
              <td style={styles.td}>Nardos T.</td>
              <td style={styles.td}>15 Books</td>
              <td style={styles.td}>Addis Ababa</td>
              <td style={styles.td}>
                <div style={styles.statusIndicator}>
                  <div style={styles.statusDot}></div>
                  <span style={styles.statusLabel}>Active</span>
                </div>
              </td>
              <td style={styles.td}>
                <div style={styles.actionButtons}>
                  <button style={styles.approveButton}>Approve</button>
                  <button style={styles.viewButton}>View</button>
                </div>
              </td>
            </tr>
            {/* Add more rows as needed */}
          </tbody>
        </table>
      </div>
    </div>
  );
};

const styles = {
  container: {
    display: 'flex',
    height: '100vh',
    backgroundColor: '#f0f0f0',
  },
  sidebar: {
    flex: '0 0 200px',
    backgroundColor: '#1e2a3a',
    color: '#fff',
    padding: '20px',
    display: 'flex',
    flexDirection: 'column',
    gap: '10px',
  },
  sidebarItem: {
    display: 'flex',
    alignItems: 'center',
    cursor: 'pointer',
    padding: '10px',
    borderRadius: '4px',
    transition: 'background-color 0.3s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
    },
  },
  icon: {
    marginRight: '10px',
  },
  label: {
    fontSize: '16px',
  },
  logoutButton: {
    marginTop: 'auto',
    display: 'flex',
    alignItems: 'center',
    cursor: 'pointer',
    padding: '10px',
    borderRadius: '4px',
    transition: 'background-color 0.3s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
    },
  },
  content: {
    flex: '1',
    padding: '20px',
    overflowY: 'auto',
  },
  table: {
    width: '100%',
    borderCollapse: 'collapse',
    backgroundColor: '#fff',
    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',
  },
  th: {
    padding: '10px',
    textAlign: 'left',
    backgroundColor: '#f0f0f0',
    borderBottom: '1px solid #e0e0e0',
  },
  td: {
    padding: '10px',
    borderBottom: '1px solid #e0e0e0',
  },
  statusIndicator: {
    display: 'flex',
    alignItems: 'center',
  },
  statusDot: {
    width: '10px',
    height: '10px',
    borderRadius: '50%',
    backgroundColor: '#4caf50',
    marginRight: '5px',
  },
  statusLabel: {
    fontSize: '14px',
    color: '#4caf50',
  },
  actionButtons: {
    display: 'flex',
    gap: '10px',
  },
  approveButton: {
    padding: '5px 10px',
    backgroundColor: '#4caf50',
    color: '#fff',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
  },
  viewButton: {
    padding: '5px 10px',
    backgroundColor: '#3498db',
    color: '#fff',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
  },
};

export default BookRent;









import React from 'react';

const BookRent = () => {
  return (
    <div style={styles.container}>
      <div style={styles.sidebar}>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üìã</span>
          <span style={styles.label}>Dashboard</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üìö</span>
          <span style={styles.label}>Books</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üë•</span>
          <span style={styles.label}>Owners</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üîî</span>
          <span style={styles.label}>Notification</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>‚öôÔ∏è</span>
          <span style={styles.label}>Setting</span>
        </div>
        <div style={styles.sidebarItem}>
          <span style={styles.icon}>üë§</span>
          <span style={styles.label}>Login as Book Owner</span>
        </div>
        <div style={styles.logoutButton}>
          <span style={styles.icon}>‚á†</span>
          <span style={styles.label}>Logout</span>
        </div>
      </div>
      <div style={styles.content}>
        <table style={styles.table}>
          <thead>
            <tr>
              <th style={styles.th}>No.</th>
              <th style={styles.th}>Owner</th>
              <th style={styles.th}>Upload</th>
              <th style={styles.th}>Location</th>
              <th style={styles.th}>Status</th>
              <th style={styles.th}>Action</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style={styles.td}>01</td>
              <td style={styles.td}>Nardos T.</td>
              <td style={styles.td}>15 Books</td>
              <td style={styles.td}>Addis Ababa</td>
              <td style={styles.td}>
                <div style={styles.statusIndicator}>
                  <div style={styles.statusDot}></div>
                  <span style={styles.statusLabel}>Active</span>
                </div>
              </td>
              <td style={styles.td}>
                <div style={styles.actionButtons}>
                  <button style={styles.approveButton}>Approve</button>
                  <button style={styles.viewButton}>View</button>
                </div>
              </td>
            </tr>
            {/* Add more rows as needed */}
          </tbody>
        </table>
      </div>
    </div>
  );
};

const styles = {
  container: {
    display: 'flex',
    height: '100vh',
    backgroundColor: '#f0f0f0',
  },
  sidebar: {
    flex: '0 0 200px',
    backgroundColor: '#1e2a3a',
    color: '#fff',
    padding: '20px',
    display: 'flex',
    flexDirection: 'column',
    gap: '10px',
  },
  sidebarItem: {
    display: 'flex',
    alignItems: 'center',
    cursor: 'pointer',
    padding: '10px',
    borderRadius: '4px',
    transition: 'background-color 0.3s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
    },
  },
  icon: {
    marginRight: '10px',
  },
  label: {
    fontSize: '16px',
  },
  logoutButton: {
    marginTop: 'auto',
    display: 'flex',
    alignItems: 'center',
    cursor: 'pointer',
    padding: '10px',
    borderRadius: '4px',
    transition: 'background-color 0.3s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
    },
  },
  content: {
    flex: '1',
    padding: '20px',
    overflowY: 'auto',
  },
  table: {
    width: '100%',
    borderCollapse: 'collapse',
    backgroundColor: '#fff',
    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',
  },
  th: {
    padding: '10px',
    textAlign: 'left',
    backgroundColor: '#f0f0f0',
    borderBottom: '1px solid #e0e0e0',
  },
  td: {
    padding: '10px',
    borderBottom: '1px solid #e0e0e0',
  },
  statusIndicator: {
    display: 'flex',
    alignItems: 'center',
  },
  statusDot: {
    width: '10px',
    height: '10px',
    borderRadius: '50%',
    backgroundColor: '#4caf50',
    marginRight: '5px',
  },
  statusLabel: {
    fontSize: '14px',
    color: '#4caf50',
  },
  actionButtons: {
    display: 'flex',
    gap: '10px',
  },
  approveButton: {
    padding: '5px 10px',
    backgroundColor: '#4caf50',
    color: '#fff',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
  },
  viewButton: {
    padding: '5px 10px',
    backgroundColor: '#3498db',
    color: '#fff',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
  },
};

export default BookRent;


import React from 'react';
import logo from 'A:/CF2/Book_Rent/book-rent/src/download.jpeg';
const LoginPage = () => {
  const styles = {
    container: {
      display: 'flex',
      height: '100vh',
      overflow: 'hidden',
    },
    leftPane: {
      flex: 1,
      backgroundColor: '#0B132B',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
    },
    rightPane: {
      flex: 1,
      padding: '5vw', // Relative units for responsiveness
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      maxWidth: '600px', // Constrain width on larger screens
      margin: 'auto', // Center form on larger screens
    },
    logo: {
      width: '80%',
      maxWidth: '300px',
      height: 'auto',
    },
    form: {
      display: 'flex',
      flexDirection: 'column',
    },
    input: {
      marginBottom: '1rem',
      padding: '0.75rem',
      fontSize: '1rem',
      borderRadius: '0.5rem',
      border: '1px solid #ccc',
    },
    button: {
      padding: '0.75rem',
      fontSize: '1rem',
      borderRadius: '0.5rem',
      border: 'none',
      backgroundColor: '#007BFF',
      color: 'white',
      cursor: 'pointer',
    },
    signupLink: {
      marginTop: '0.75rem',
      color: '#007BFF',
      textDecoration: 'none',
    },
    '@media (max-width: 768px)': {
      rightPane: {
        padding: '2rem', // Adjusted padding for smaller screens
      },
    },
    '@media (max-width: 480px)': {
      input: {
        padding: '0.5rem',
        fontSize: '0.875rem',
      },
      button: {
        padding: '0.5rem',
        fontSize: '0.875rem',
      },
      logo: {
        width: '60%',
      },
    },
  };

  return (
    <div style={styles.container}>
      <div style={styles.leftPane}>
        <img 
          src={logo}
          alt="Book Logo" 
          style={styles.logo} 
        />
      </div>
      <div style={styles.rightPane}>
        <h2>Book Rent</h2>
        <h3>Login</h3>
        <form style={styles.form}>
          <input type="email" placeholder="Email address" style={styles.input} />
          <input type="password" placeholder="Password" style={styles.input} />
          <button type="submit" style={styles.button}>LOGIN</button>
          <a href="/signup" style={styles.signupLink}>Don't have an account? Sign Up</a>
        </form>
      </div>
    </div>
  );
};

export default LoginPage;







import React, { useState, useEffect } from 'react';

const OwnerDetails = () => {
  const [owners, setOwners] = useState([]);
  const [selectedOwner, setSelectedOwner] = useState(null);

  useEffect(() => {
    // Fetch owner and book data from an API or database
    const ownerData = [
      {
        id: 1,
        name: 'Nardos T',
        email: 'nardos@example.com',
        location: 'Addis Ababa',
        books: [
          { id: 1, title: 'Book 1', price: 40, status: 'Active' },
          { id: 2, title: 'Book 2', price: 30, status: 'Inactive' },
          { id: 3, title: 'Book 3', price: 50, status: 'Active' },
        ],
      },
      // Add more owner data here
    ];
    setOwners(ownerData);
  }, []);

  const handleOwnerSelect = (ownerId) => {
    const selectedOwner = owners.find((owner) => owner.id === ownerId);
    setSelectedOwner(selectedOwner);
  };

  const handleApprove = (bookId) => {
    // Implement logic to approve the book
    console.log(`Approving book with ID: ${bookId}`);
  };

  return (
    <div
      style={{
        display: 'flex',
        height: '100vh',
      }}
    >
      <div
        style={{
          backgroundColor: '#1e2a3a',
          color: '#fff',
          padding: '20px',
          width: '200px',
        }}
      >
        {/* Sidebar content */}
      </div>
      <div
        style={{
          flex: 1,
          padding: '20px',
        }}
      >
        <div
          style={{
            fontSize: '24px',
            fontWeight: 'bold',
            marginBottom: '20px',
          }}
        >
          Owners
        </div>
        <div
          style={{
            display: 'flex',
            flexWrap: 'wrap',
            marginBottom: '20px',
          }}
        >
          {owners.map((owner) => (
            <div
              key={owner.id}
              style={{
                backgroundColor: '#f1f1f1',
                padding: '10px 20px',
                borderRadius: '4px',
                margin: '0 10px 10px 0',
                cursor: 'pointer',
                ...(selectedOwner?.id === owner.id && {
                  backgroundColor: '#007bff',
                  color: '#fff',
                }),
              }}
              onClick={() => handleOwnerSelect(owner.id)}
            >
              {owner.name}
            </div>
          ))}
        </div>
        {selectedOwner && (
          <div
            style={{
              backgroundColor: '#f1f1f1',
              padding: '20px',
              borderRadius: '4px',
            }}
          >
            <div
              style={{
                display: 'flex',
                flexDirection: 'column',
                marginBottom: '20px',
              }}
            >
              <div
                style={{
                  fontSize: '18px',
                  fontWeight: 'bold',
                }}
              >
                {selectedOwner.name}
              </div>
              <div
                style={{
                  fontSize: '14px',
                  color: '#666',
                }}
              >
                {selectedOwner.email}
              </div>
              <div
                style={{
                  fontSize: '14px',
                  color: '#666',
                }}
              >
                {selectedOwner.location}
              </div>
            </div>
            <div
              style={{
                fontSize: '16px',
                fontWeight: 'bold',
                marginBottom: '10px',
              }}
            >
              Books
            </div>
            <table
              style={{
                width: '100%',
                borderCollapse: 'collapse',
              }}
            >
              <thead>
                <tr>
                  <th
                    style={{
                      backgroundColor: '#f1f1f1',
                      padding: '10px',
                      textAlign: 'left',
                    }}
                  >
                    No.
                  </th>
                  <th
                    style={{
                      backgroundColor: '#f1f1f1',
                      padding: '10px',
                      textAlign: 'left',
                    }}
                  >
                    Title
                  </th>
                  <th
                    style={{
                      backgroundColor: '#f1f1f1',
                      padding: '10px',
                      textAlign: 'left',
                    }}
                  >
                    Price
                  </th>
                  <th
                    style={{
                      backgroundColor: '#f1f1f1',
                      padding: '10px',
                      textAlign: 'left',
                    }}
                  >
                    Status
                  </th>
                  <th
                    style={{
                      backgroundColor: '#f1f1f1',
                      padding: '10px',
                      textAlign: 'left',
                    }}
                  >
                    Action
                  </th>
                </tr>
              </thead>
              <tbody>
                {selectedOwner.books.map((book, index) => (
                  <tr
                    key={book.id}
                    style={{
                      borderBottom: '1px solid #ddd',
                    }}
                  >
                    <td
                      style={{
                        padding: '10px',
                      }}
                    >
                      {index + 1}
                    </td>
                    <td
                      style={{
                        padding: '10px',
                      }}
                    >
                      {book.title}
                    </td>
                    <td
                      style={{
                        padding: '10px',
                      }}
                    >
                      ETB {book.price}
                    </td>
                    <td
                      style={{
                        padding: '10px',
                      }}
                    >
                      <div
                        style={{
                          width: '10px',
                          height: '10px',
                          borderRadius: '50%',
                          marginRight: '5px',
                          ...(book.status === 'Active'
                            ? {
                                backgroundColor: 'green',
                              }
                            : {
                                backgroundColor: 'red',
                              }),
                        }}
                      />
                      {book.status}
                    </td>
                    <td
                      style={{
                        padding: '10px',
                      }}
                    >
                      <button
                        style={{
                          backgroundColor: '#007bff',
                          color: '#fff',
                          border: 'none',
                          padding: '5px 10px',
                          borderRadius: '4px',
                          cursor: 'pointer',
                        }}
                        onClick={() => handleApprove(book.id)}
                      >
                        Approve
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </div>
    </div>
  );
};

export default OwnerDetails;
